version: '3'

dotenv: ['.env']

includes:  
  mssql: ./services/sqlserver
  shipyard: ./sources/shipyard

vars:
  SOLUTION_NAME: skunkworks
  SOLUTION_DIR:
    sh: pwd

silent: true

tasks:
  
  prepare:
    desc: "Creates the .env & docker-compose.local.yml config files for local development"
    cmds: 
      - cp .env.example .env
      - cp docker-compose.local.yml.example docker-compose.local.yml    
    status:
      - test -f .env
      - test -f docker-compose.local.yml

  up:
    desc: "Bring up the solution"
    deps: [ prepare ]
    cmds:
      - docker-compose -p {{.SOLUTION_NAME}} -f docker-compose.yml -f docker-compose.local.yml up -d --no-recreate

  down: 
    desc: "Bring down the solution"
    cmds:
      - docker-compose -p {{.SOLUTION_NAME}} stop
      - docker-compose -p {{.SOLUTION_NAME}} rm -f

  restart:
    desc: "Restart the solution"
    cmds:
      - task: down
      - task: up
  
  status:
    desc: "Display the status of all containers in the solution"
    cmds:
      - docker ps --format "table {{"{{"}}.ID{{"}}"}}\t{{"{{"}}.Names{{"}}"}}\t{{"{{"}}.Status{{"}}"}}\t{{"{{"}}.Image{{"}}"}}"

  logs:
    desc: "Display logs for solution"
    cmds: 
      - docker-compose -p {{.SOLUTION_NAME}} logs -f --tail 100    

  build:
    desc: "Builds all container images"
    cmds:
      - docker-compose -p {{.SOLUTION_NAME}} build --force-rm --parallel
    
  push:
    desc: "Pushes container images to remote repositories"
    cmds:
      - docker-compose push

  pull:
    desc: "Pulls the most recent container images"
    cmds:
      - docker-compose pull
    
  prune:
    desc: "Prune obsolete remote git branches and local container images"
    cmds:
      - git fetch origin --prune
      - docker images prune -a
      - docker container prune -all
  

  default:
    cmds:
      - task -l
